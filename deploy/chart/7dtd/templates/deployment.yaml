apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "7dtd.fullname" . }}
  labels:
    {{- include "7dtd.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "7dtd.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "7dtd.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "7dtd.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["bash", "-c", "while true; do sleep 10; done"]
          ports:
            - name: game
              containerPort: {{ .Values.gameService.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              path: /config
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "7dtd.fullname" . }}-config

        {{- if or .Values.serverConfig.server.serverPasswordSecret .Values.serverConfig.admin.telnetPasswordSecret }}
        - name: secrets
          projected:
            sources:
              {{- if .Values.serverConfig.server.serverPasswordSecret }}
              - secret:
                  name: {{ .Values.serverConfig.server.serverPasswordSecret | quote }}
                  items:
                    - key: password
                      path: server/password
              {{- end }}
              {{- if .Values.serverConfig.admin.telnetPasswordSecret }}
              - secret:
                  name: {{ .Values.serverConfig.admin.telnetPasswordSecret | quote }}
                  items:
                    - key: password
                      path: telnet/password
              {{- end }}
        {{- end }}{{/* if or .Values.serverConfig.server.serverPasswordSecret .Values.serverConfig.admin.telnetPasswordSecret */}}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
